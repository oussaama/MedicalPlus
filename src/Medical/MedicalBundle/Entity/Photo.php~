<?php

namespace Medical\MedicalBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\HttpFoundation\File\UploadedFile;

/**
 * Photo
 *
 * @ORM\Table(name="photo")
 * @ORM\Entity(repositoryClass="Medical\MedicalBundle\Repository\PhotoRepository")
 */
class Photo {

    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="nom_ph", type="string", length=255)
     */
    private $nomPh;
    
    /**
     * @var string
     *
     * @ORM\Column(name="nom", type="string", length=255)
     */
    private $nom;

    /**
     * @var int
     *
     * @ORM\Column(name="entreprise_ph", type="integer")
     */
    private $entreprisePh;

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId() {
        return $this->id;
    }

    /**
     * Set nomPh
     *
     * @param string $nomPh
     * @return Photo
     */
    public function setNomPh($nomPh) {
        $this->nomPh = $nomPh;

        return $this;
    }

    /**
     * Get nomPh
     *
     * @return string 
     */
    public function getNomPh() {
        return $this->nomPh;
    }

    /**
     * Set entreprisePh
     *
     * @param integer $entreprisePh
     * @return Photo
     */
    public function setEntreprisePh($entreprisePh) {
        $this->entreprisePh = $entreprisePh;

        return $this;
    }

    /**
     * Get entreprisePh
     *
     * @return integer 
     */
    public function getEntreprisePh() {
        return $this->entreprisePh;
    }


    public function getAbsolutePath()
    {
        return null === $this->nomPh
            ? null
            : $this->getUploadRootDir().'/'.$this->nomPh;
    }

    public function getWebPath()
    {
        return null === $this->path
            ? null
            : $this->getUploadDir().'/'.$this->path;
    }

    protected function getUploadRootDir()
    {
        // the absolute directory path where uploaded
        // documents should be saved
        return __DIR__.'/../../../../web/'.$this->getUploadDir();
    }

    protected function getUploadDir()
    {
        // get rid of the __DIR__ so it doesn't screw up
        // when displaying uploaded doc/image in the view.
        return 'uploads/center';
    }
    
     /**
     * @Assert\File(maxSize="6000000")
     */
    private $file;

    /**
     * Sets file.
     *
     * @param UploadedFile $file
     */
    public function setFile(UploadedFile $file = null)
    {
        $this->file = $file;
    }

    /**
     * Get file.
     *
     * @return UploadedFile
     */
    public function getFile()
    {
        return $this->file;
    }
    
    public function upload()
{
    // the file property can be empty if the field is not required
    if (null === $this->getFile()) {
        return;
    }

    // use the original file name here but you should
    // sanitize it at least to avoid any security issues

    // move takes the target directory and then the
    // target filename to move to
    $this->getFile()->move(
        $this->getUploadRootDir(),
        $this->getFile()->getClientOriginalName()
    );

    // set the path property to the filename where you've saved the file
    $this->nomPh = $this->getFile()->getClientOriginalName();

    // clean up the file property as you won't need it anymore
    $this->file = null;
}

}